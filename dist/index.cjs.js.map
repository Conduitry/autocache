{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import { createHash } from 'crypto';\nimport { promises, writeFileSync } from 'fs';\nimport { serialize, deserialize } from 'v8';\n\nexport const autocache = (path: string, mode: Mode) => {\n\tlet cache = <Cache>new Map();\n\tlet loading: Promise<void>;\n\tlet removing = new Set<string>();\n\tlet pending = new Map<string, any>();\n\treturn {\n\t\tasync cache(key: string, compute_value: () => Promise<any>) {\n\t\t\tconst key_hashed = createHash('sha1').update(key).digest('hex');\n\t\t\tawait (loading ||\n\t\t\t\t(loading = promises\n\t\t\t\t\t.readFile(path)\n\t\t\t\t\t.then(deserialize)\n\t\t\t\t\t.then((data: Cache) => {\n\t\t\t\t\t\tcache = data;\n\t\t\t\t\t\tfor (const [key, [, modes]] of cache) {\n\t\t\t\t\t\t\tmodes.delete(mode);\n\t\t\t\t\t\t\tif (modes.size === 0) {\n\t\t\t\t\t\t\t\tremoving.add(key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {})));\n\t\t\tlet value: any, modes: Set<Mode>;\n\t\t\tif (cache.has(key_hashed)) {\n\t\t\t\t[value, modes] = cache.get(key_hashed);\n\t\t\t} else if (pending.has(key_hashed)) {\n\t\t\t\treturn pending.get(key_hashed);\n\t\t\t} else {\n\t\t\t\tconst promise = compute_value();\n\t\t\t\tpending.set(key_hashed, promise);\n\t\t\t\tvalue = await promise;\n\t\t\t\tmodes = new Set();\n\t\t\t\tcache.set(key_hashed, [value, modes]);\n\t\t\t\tpending.delete(key_hashed);\n\t\t\t}\n\t\t\tremoving.delete(key_hashed);\n\t\t\tmodes.add(mode);\n\t\t\treturn value;\n\t\t},\n\t\tclose() {\n\t\t\tfor (const key of removing) {\n\t\t\t\tcache.delete(key);\n\t\t\t}\n\t\t\twriteFileSync(path, serialize(cache));\n\t\t},\n\t};\n};\n\ntype Mode = string | number | boolean | null | undefined;\n\ntype CacheEntry = [any, Set<Mode>];\n\ntype Cache = Map<string, CacheEntry>;\n"],"names":["createHash","promises","deserialize","writeFileSync","serialize"],"mappings":";;;;;;;;MAIa,SAAS,GAAG,CAAC,IAAY,EAAE,IAAU;IACjD,IAAI,KAAK,GAAU,IAAI,GAAG,EAAE,CAAC;IAC7B,IAAI,OAAsB,CAAC;IAC3B,IAAI,QAAQ,GAAG,IAAI,GAAG,EAAU,CAAC;IACjC,IAAI,OAAO,GAAG,IAAI,GAAG,EAAe,CAAC;IACrC,OAAO;QACN,MAAM,KAAK,CAAC,GAAW,EAAE,aAAiC;YACzD,MAAM,UAAU,GAAGA,iBAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAChE,OAAO,OAAO;iBACZ,OAAO,GAAGC,WAAQ;qBACjB,QAAQ,CAAC,IAAI,CAAC;qBACd,IAAI,CAACC,cAAW,CAAC;qBACjB,IAAI,CAAC,CAAC,IAAW;oBACjB,KAAK,GAAG,IAAI,CAAC;oBACb,KAAK,MAAM,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,EAAE;wBACrC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACnB,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;4BACrB,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;yBAClB;qBACD;iBACD,CAAC;qBACD,KAAK,CAAC,SAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,KAAU,EAAE,KAAgB,CAAC;YACjC,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC1B,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACvC;iBAAM,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBACnC,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC/B;iBAAM;gBACN,MAAM,OAAO,GAAG,aAAa,EAAE,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACjC,KAAK,GAAG,MAAM,OAAO,CAAC;gBACtB,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;gBAClB,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBACtC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aAC3B;YACD,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC5B,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,KAAK,CAAC;SACb;QACD,KAAK;YACJ,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;gBAC3B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAClB;YACDC,gBAAa,CAAC,IAAI,EAAEC,YAAS,CAAC,KAAK,CAAC,CAAC,CAAC;SACtC;KACD,CAAC;AACH;;;;"}