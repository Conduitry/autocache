{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { createHash } from 'crypto';\nimport { readFileSync, writeFileSync } from 'fs';\nimport { resolve } from 'path';\nimport { serialize, deserialize } from 'v8';\n\ntype Mode = string | number | boolean | null | undefined;\n\nexport const autocache = (path: string, mode: Mode) => {\n\tpath = resolve(path);\n\tlet cache = new Map<Mode, Map<string, any>>();\n\tconst all_entries = new Map<string, any>();\n\tconst used_entries = new Map<string, any>();\n\tconst pending_entries = new Map<string, Promise<any>>();\n\ttry {\n\t\tconst data = deserialize(readFileSync(path));\n\t\tif (data && typeof data === 'object' && data.schema === 2 && data.cache instanceof Map) {\n\t\t\tcache = data.cache;\n\t\t\tfor (const values of cache.values()) {\n\t\t\t\tfor (const [key, value] of values) {\n\t\t\t\t\tall_entries.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch {}\n\tcache.set(mode, used_entries);\n\treturn {\n\t\tasync cache(key: string, compute_value: () => Promise<any>) {\n\t\t\tconst key_hashed = createHash('sha1').update(key).digest('hex');\n\t\t\tlet value: any;\n\t\t\tif (all_entries.has(key_hashed)) {\n\t\t\t\tvalue = all_entries.get(key_hashed);\n\t\t\t} else if (pending_entries.has(key_hashed)) {\n\t\t\t\treturn pending_entries.get(key_hashed);\n\t\t\t} else {\n\t\t\t\tconst promise = compute_value();\n\t\t\t\tpending_entries.set(key_hashed, promise);\n\t\t\t\tvalue = await promise;\n\t\t\t\tpending_entries.delete(key_hashed);\n\t\t\t\tall_entries.set(key_hashed, value);\n\t\t\t}\n\t\t\tused_entries.set(key_hashed, value);\n\t\t\treturn value;\n\t\t},\n\t\tclose() {\n\t\t\twriteFileSync(path, serialize({ schema: 2, cache }));\n\t\t},\n\t};\n};\n"],"names":[],"mappings":";;;;;MAOa,SAAS,GAAG,CAAC,IAAY,EAAE,IAAU;IACjD,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,IAAI,KAAK,GAAG,IAAI,GAAG,EAA0B,CAAC;IAC9C,MAAM,WAAW,GAAG,IAAI,GAAG,EAAe,CAAC;IAC3C,MAAM,YAAY,GAAG,IAAI,GAAG,EAAe,CAAC;IAC5C,MAAM,eAAe,GAAG,IAAI,GAAG,EAAwB,CAAC;IACxD,IAAI;QACH,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,YAAY,GAAG,EAAE;YACvF,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACnB,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;gBACpC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,EAAE;oBAClC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;iBAC5B;aACD;SACD;KACD;IAAC,MAAM,GAAE;IACV,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC9B,OAAO;QACN,MAAM,KAAK,CAAC,GAAW,EAAE,aAAiC;YACzD,MAAM,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAChE,IAAI,KAAU,CAAC;YACf,IAAI,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAChC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACpC;iBAAM,IAAI,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC3C,OAAO,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACvC;iBAAM;gBACN,MAAM,OAAO,GAAG,aAAa,EAAE,CAAC;gBAChC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACzC,KAAK,GAAG,MAAM,OAAO,CAAC;gBACtB,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACnC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACnC;YACD,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SACb;QACD,KAAK;YACJ,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SACrD;KACD,CAAC;AACH;;;;"}